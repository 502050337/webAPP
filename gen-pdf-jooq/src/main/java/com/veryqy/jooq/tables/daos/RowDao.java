/*
 * This file is generated by jOOQ.
*/
package com.veryqy.jooq.tables.daos;


import com.veryqy.jooq.tables.Row;
import com.veryqy.jooq.tables.records.RowRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RowDao extends DAOImpl<RowRecord, com.veryqy.jooq.tables.pojos.Row, String> {

    /**
     * Create a new RowDao without any configuration
     */
    public RowDao() {
        super(Row.ROW, com.veryqy.jooq.tables.pojos.Row.class);
    }

    /**
     * Create a new RowDao with an attached configuration
     */
    public RowDao(Configuration configuration) {
        super(Row.ROW, com.veryqy.jooq.tables.pojos.Row.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.veryqy.jooq.tables.pojos.Row object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>seq IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchBySeq(String... values) {
        return fetch(Row.ROW.SEQ, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchById(String... values) {
        return fetch(Row.ROW.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.veryqy.jooq.tables.pojos.Row fetchOneById(String value) {
        return fetchOne(Row.ROW.ID, value);
    }

    /**
     * Fetch records that have <code>subcategory IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchBySubcategory(String... values) {
        return fetch(Row.ROW.SUBCATEGORY, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchByName(String... values) {
        return fetch(Row.ROW.NAME, values);
    }

    /**
     * Fetch records that have <code>unit IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchByUnit(String... values) {
        return fetch(Row.ROW.UNIT, values);
    }

    /**
     * Fetch records that have <code>remark IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchByRemark(String... values) {
        return fetch(Row.ROW.REMARK, values);
    }

    /**
     * Fetch records that have <code>subname IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchBySubname(String... values) {
        return fetch(Row.ROW.SUBNAME, values);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchByPrice(String... values) {
        return fetch(Row.ROW.PRICE, values);
    }

    /**
     * Fetch records that have <code>count IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchByCount(String... values) {
        return fetch(Row.ROW.COUNT, values);
    }

    /**
     * Fetch records that have <code>checked IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchByChecked(Boolean... values) {
        return fetch(Row.ROW.CHECKED, values);
    }

    /**
     * Fetch records that have <code>total IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchByTotal(String... values) {
        return fetch(Row.ROW.TOTAL, values);
    }

    /**
     * Fetch records that have <code>order_id IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchByOrderId(String... values) {
        return fetch(Row.ROW.ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>commodity_id IN (values)</code>
     */
    public List<com.veryqy.jooq.tables.pojos.Row> fetchByCommodityId(String... values) {
        return fetch(Row.ROW.COMMODITY_ID, values);
    }
}
